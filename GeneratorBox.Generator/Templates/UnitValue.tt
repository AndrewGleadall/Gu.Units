<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="Microsoft.CSharp" #>
<#@ import namespace="System" #>
<#@ output extension=".txt" #>
<#@ parameter name="ClassMetaData" type="System.Object" #>
<# 
if (ClassMetaData != null)
{
	// Template used by SimpleSample.tt
	var classData = ClassMetaData as dynamic;
#>
namespace <#= classData.Namespace #>
{
    using System;
    using System.Globalization;
    using System.Xml;
    using System.Xml.Linq;
    using System.Xml.Schema;
    using System.Xml.Serialization;

	/// <summary>
    /// An <#= classData.ClassName #>
    /// </summary>
    [Serializable]
	public partial struct <#= classData.ClassName #> : IComparable<<#= classData.ClassName #>>, IEquatable<<#= classData.ClassName #>>, IFormattable, IXmlSerializable, IUnitValue
	{
	    <#
		foreach(var item in classData.Fields)
		{
		#>
		public <#= item.Readonly #><#= item.ReturnType #> <#= item.Name #>;
		<#
		} 
		#>

		<#
		foreach(var item in classData.Properties)
		{
		#>
		public <#= item.ReturnType #> <#= item.Name #> { get; set; }
		<#
		} 
		#>
	}
}
<#
}
#>